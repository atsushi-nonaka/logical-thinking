<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.runy.logical_thinking.mapper.LogicTreeMapper">
	<resultMap type="jp.co.runy.logical_thinking.domain.LogicTree" id="LogicTree">
		<id column="id" property="id"/>
		<result column="partner_wants" property="partnerWants"/>
		<result column="current_state" property="currentState"/>
		<result column="description_type" property="descriptionType"/>
		<result column="framework_id" property="frameworkId"/>
		<result column="insistence" property="insistence"/>
		<result column="session_id" property="sessionId"/>
		<collection property="firstHierarchyList" ofType="jp.co.runy.logical_thinking.domain.FirstHierarchy">
			<result column="fh_id" property="id"/>
			<result column="fh_word" property="word"/>
			<result column="fh_another_word" property="anotherWord"/>
			<result column="id" property="logicTreeId"/>
			<collection property="secondHierarchyList" ofType="jp.co.runy.logical_thinking.domain.SecondHierarchy">
				<result column="sh_id" property="id"/>
				<result column="sh_explanation" property="explanation"/>
				<result column="fh_id" property="firstHierarchyId"/>
				<collection property="thirdHierarchyList" ofType="jp.co.runy.logical_thinking.domain.ThirdHierarchy">
					<result column="th_id" property="id"/>
					<result column="th_explanation" property="explanation"/>
					<result column="sh_id" property="secondHierarchyId"/>
				</collection>
			</collection>
		</collection>
	</resultMap>
	<select id="findBySessionId" resultMap="LogicTree" parameterType="string">
		select 
			lt.id, 
			lt.partner_wants, 
			lt.current_state, 
			lt.description_type, 
			lt.framework_id, 
			lt.insistence, 
			lt.session_id, 
			fh.id as fh_id, 
			fh.word as fh_word, 
			fh.another_word as fh_another_word, 
			sh.id as sh_id, 
			sh.explanation as sh_explanation,
			th.id as th_id, 
			th.explanation as th_explanation 
		from 
			logic_trees lt 
		left join 
			first_hierarchies fh on lt.id = fh.logic_tree_id 
		left join 
			second_hierarchies sh on fh.id = sh.first_hierarchy_id
		left join 
			third_hierarchies th on sh.id = th.second_hierarchy_id 
		where lt.session_id = #{sessionId};
	</select>
	
	<select id="selectLogicTree" resultType="jp.co.runy.logical_thinking.domain.LogicTree">
		select id, partner_wants, current_state, description_type, framework_id, insistence from logic_trees;
    </select>
    
	<insert id="upsert" parameterType="jp.co.runy.logical_thinking.domain.LogicTree">
		<if test="id != null">
		<!-- update -->
		</if>
		<if test="id == 0">
			insert into logic_trees (
				<trim prefixOverrides=", ">
					<if test="partnerWants != null">, partner_wants</if>
					<if test="currentState != null">, current_state</if>
					<if test="descriptionType != null">, description_type</if>
					<if test="frameworkId != 0">, framework_id</if>
					<if test="insistence != null">, insistence</if>
					<if test="sessionId != null">, session_id</if>
				</trim>
			) 
			values (
				<trim prefixOverrides=",">
					<if test="partnerWants != null">, #{partnerWants}</if>
					<if test="currentState != null">, #{currentState}</if>
					<if test="descriptionType != null">, #{descriptionType}</if>
					<if test="frameworkId != 0">, #{frameworkId}</if>
					<if test="insistence != null">, #{insistence}</if>
					<if test="sessionId != null">, #{sessionId}</if>
				</trim>
			);
		</if>
		<selectKey keyProperty="id" resultType="int" order="AFTER">
            <if test="id != 0">select ${id}</if>
            <if test="id == 0">select CURRVAL('logic_trees_id_seq');</if>
        </selectKey>
	</insert>
	<delete id="deleteBySessionId">
		delete from logic_trees where session_id = #{sessionId}
	</delete>
	
</mapper>